# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Set ownership for node user
RUN chown -R node:node /app

# Switch to non-root user
USER node

# Copy package files with correct ownership
COPY --chown=node:node package*.json ./

# Install dependencies
RUN npm ci

# Copy source files with correct ownership
COPY --chown=node:node . .

# Create .env file from build args
ARG VITE_API_URL
ARG VITE_FIREBASE_API_KEY
ARG VITE_FIREBASE_AUTH_DOMAIN
ARG VITE_FIREBASE_PROJECT_ID
ARG VITE_FIREBASE_STORAGE_BUCKET
ARG VITE_FIREBASE_MESSAGING_SENDER_ID
ARG VITE_FIREBASE_APP_ID
ARG VITE_FIREBASE_MEASUREMENT_ID
ARG VITE_GROQ_API_KEY
ARG VITE_OPENAI_API_KEY
ARG VITE_BASE_URL
ARG VITE_MODEL
ARG VITE_GROQ_MODEL
ARG VITE_PINECONE_API_KEY
ARG VITE_PINECONE_ENVIRONMENT
ARG VITE_PINECONE_INDEX_NAME
ARG VITE_PINECONE_HOST
ARG VITE_PINECONE_DIMENSIONS
ARG VITE_PINECONE_METRIC
ARG VITE_EMBEDDING_MODEL

RUN printf "VITE_API_URL=${VITE_API_URL}\n\
VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}\n\
VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}\n\
VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}\n\
VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}\n\
VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}\n\
VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}\n\
VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}\n\
VITE_GROQ_API_KEY=${VITE_GROQ_API_KEY}\n\
VITE_OPENAI_API_KEY=${VITE_OPENAI_API_KEY}\n\
VITE_BASE_URL=${VITE_BASE_URL}\n\
VITE_MODEL=${VITE_MODEL}\n\
VITE_GROQ_MODEL=${VITE_GROQ_MODEL}\n\
VITE_PINECONE_API_KEY=${VITE_PINECONE_API_KEY}\n\
VITE_PINECONE_ENVIRONMENT=${VITE_PINECONE_ENVIRONMENT}\n\
VITE_PINECONE_INDEX_NAME=${VITE_PINECONE_INDEX_NAME}\n\
VITE_PINECONE_HOST=${VITE_PINECONE_HOST}\n\
VITE_PINECONE_DIMENSIONS=${VITE_PINECONE_DIMENSIONS}\n\
VITE_PINECONE_METRIC=${VITE_PINECONE_METRIC}\n\
VITE_EMBEDDING_MODEL=${VITE_EMBEDDING_MODEL}" > .env

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy nginx configuration
COPY --chown=nginx:nginx nginx.conf /etc/nginx/conf.d/default.conf

# Copy built files from builder stage
COPY --from=builder --chown=nginx:nginx /app/dist /usr/share/nginx/html

# Use nginx user
USER nginx

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]