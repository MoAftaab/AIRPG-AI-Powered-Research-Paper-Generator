rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);

      // Papers subcollection
      match /papers/{paperId} {
        allow read: if isOwner(userId);
        allow create: if isOwner(userId)
          && request.resource.data.keys().hasAll(['title', 'abstract', 'createdAt', 'lastModified', 'userId'])
          && request.resource.data.userId == userId;
        allow update: if isOwner(userId)
          && request.resource.data.userId == userId
          && resource.data.userId == userId;
        allow delete: if isOwner(userId)
          && resource.data.userId == userId;
      }

      // Test documents for verifying access
      match /test/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Deny access to all other paths
    match /{document=**} {
      allow read, write: false;
    }
  }
}
